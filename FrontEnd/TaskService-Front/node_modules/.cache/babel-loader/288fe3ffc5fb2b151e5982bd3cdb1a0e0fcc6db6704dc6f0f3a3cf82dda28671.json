{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PIPEPC\\\\task-service-front\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  onCreate,\n  onUpdate,\n  task,\n  onCancel\n}) => {\n  _s();\n  const [title, setTitle] = useState('');\n\n  // Si estamos editando una tarea, llenar el formulario con el título\n  useEffect(() => {\n    if (task) {\n      setTitle(task.title);\n    }\n  }, [task]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (task) {\n      // Si hay tarea en edición, actualizar\n      onUpdate(task.id, {\n        ...task,\n        title\n      });\n    } else {\n      // Si no, crear una nueva tarea\n      onCreate({\n        title\n      });\n    }\n    setTitle(''); // Limpiar el campo de entrada\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Ingrese una tarea\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: [task ? 'Actualizar' : 'Crear', \" Tarea\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), task && /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: onCancel,\n      children: \"Cancelar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"FgwV7fs/MKl3JfXZzkj+8ZExyxs=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TaskForm","onCreate","onUpdate","task","onCancel","_s","title","setTitle","handleSubmit","e","preventDefault","id","onSubmit","children","type","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/PIPEPC/task-service-front/src/components/TaskForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst TaskForm = ({ onCreate, onUpdate, task, onCancel }) => {\r\n  const [title, setTitle] = useState('');\r\n\r\n  // Si estamos editando una tarea, llenar el formulario con el título\r\n  useEffect(() => {\r\n    if (task) {\r\n      setTitle(task.title);\r\n    }\r\n  }, [task]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (task) {\r\n      // Si hay tarea en edición, actualizar\r\n      onUpdate(task.id, { ...task, title });\r\n    } else {\r\n      // Si no, crear una nueva tarea\r\n      onCreate({ title });\r\n    }\r\n    setTitle(''); // Limpiar el campo de entrada\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        placeholder=\"Ingrese una tarea\"\r\n        required\r\n      />\r\n      <button type=\"submit\">{task ? 'Actualizar' : 'Crear'} Tarea</button>\r\n      {task && <button type=\"button\" onClick={onCancel}>Cancelar</button>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC,IAAI;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACd,IAAIM,IAAI,EAAE;MACRI,QAAQ,CAACJ,IAAI,CAACG,KAAK,CAAC;IACtB;EACF,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC;EAEV,MAAMK,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIP,IAAI,EAAE;MACR;MACAD,QAAQ,CAACC,IAAI,CAACQ,EAAE,EAAE;QAAE,GAAGR,IAAI;QAAEG;MAAM,CAAC,CAAC;IACvC,CAAC,MAAM;MACL;MACAL,QAAQ,CAAC;QAAEK;MAAM,CAAC,CAAC;IACrB;IACAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChB,CAAC;EAED,oBACER,OAAA;IAAMa,QAAQ,EAAEJ,YAAa;IAAAK,QAAA,gBAC3Bd,OAAA;MACEe,IAAI,EAAC,MAAM;MACXC,KAAK,EAAET,KAAM;MACbU,QAAQ,EAAGP,CAAC,IAAKF,QAAQ,CAACE,CAAC,CAACQ,MAAM,CAACF,KAAK,CAAE;MAC1CG,WAAW,EAAC,mBAAmB;MAC/BC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFxB,OAAA;MAAQe,IAAI,EAAC,QAAQ;MAAAD,QAAA,GAAEV,IAAI,GAAG,YAAY,GAAG,OAAO,EAAC,QAAM;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACnEpB,IAAI,iBAAIJ,OAAA;MAAQe,IAAI,EAAC,QAAQ;MAACU,OAAO,EAAEpB,QAAS;MAAAS,QAAA,EAAC;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEX,CAAC;AAAClB,EAAA,CAnCIL,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAqCd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}