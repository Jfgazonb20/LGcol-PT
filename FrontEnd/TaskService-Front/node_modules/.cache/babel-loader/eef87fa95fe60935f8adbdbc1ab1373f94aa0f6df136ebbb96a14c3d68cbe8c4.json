{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PIPEPC\\\\task-service-front\\\\src\\\\components\\\\TaskList.js\";\nimport React from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  tasks,\n  onReorder,\n  onUpdate,\n  onDelete\n}) => {\n  const handleOnDragEnd = result => {\n    if (!result.destination) return; // Si no hay destino, no hacemos nada\n\n    const reorderedTasks = Array.from(tasks); // Hacemos una copia del array de tareas\n    const [removed] = reorderedTasks.splice(result.source.index, 1); // Quitamos la tarea arrastrada\n    reorderedTasks.splice(result.destination.index, 0, removed); // Insertamos la tarea en el nuevo lugar\n\n    onReorder(reorderedTasks); // Actualizamos el estado con el nuevo orden\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: handleOnDragEnd,\n    children: /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"taskList\",\n      children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n        ref: provided.innerRef,\n        ...provided.droppableProps,\n        className: \"list-unstyled\",\n        children: [tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n          draggableId: task.id.toString(),\n          index: index,\n          children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n            ref: provided.innerRef,\n            ...provided.draggableProps,\n            ...provided.dragHandleProps,\n            className: \"card mb-3 shadow-sm\",\n            style: {\n              ...provided.draggableProps.style\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: task.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex justify-content-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => onUpdate(task.id, {\n                    ...task,\n                    completed: !task.completed\n                  }),\n                  className: \"btn btn-outline-primary btn-sm\",\n                  children: task.completed ? 'Marcar Incompleta' : 'Marcar Completa'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => onDelete(task.id),\n                  className: \"btn btn-outline-danger btn-sm\",\n                  children: \"Eliminar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 19\n          }, this)\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this)), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","TaskList","tasks","onReorder","onUpdate","onDelete","handleOnDragEnd","result","destination","reorderedTasks","Array","from","removed","splice","source","index","onDragEnd","children","droppableId","provided","ref","innerRef","droppableProps","className","map","task","draggableId","id","toString","draggableProps","dragHandleProps","style","title","fileName","_jsxFileName","lineNumber","columnNumber","description","onClick","completed","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/PIPEPC/task-service-front/src/components/TaskList.js"],"sourcesContent":["import React from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nconst TaskList = ({ tasks, onReorder, onUpdate, onDelete }) => {\r\n  const handleOnDragEnd = (result) => {\r\n    if (!result.destination) return; // Si no hay destino, no hacemos nada\r\n\r\n    const reorderedTasks = Array.from(tasks); // Hacemos una copia del array de tareas\r\n    const [removed] = reorderedTasks.splice(result.source.index, 1); // Quitamos la tarea arrastrada\r\n    reorderedTasks.splice(result.destination.index, 0, removed); // Insertamos la tarea en el nuevo lugar\r\n\r\n    onReorder(reorderedTasks); // Actualizamos el estado con el nuevo orden\r\n  };\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={handleOnDragEnd}>\r\n      <Droppable droppableId=\"taskList\">\r\n        {(provided) => (\r\n          <ul ref={provided.innerRef} {...provided.droppableProps} className=\"list-unstyled\">\r\n            {tasks.map((task, index) => (\r\n              <Draggable key={task.id} draggableId={task.id.toString()} index={index}>\r\n                {(provided) => (\r\n                  <li\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    className=\"card mb-3 shadow-sm\"\r\n                    style={{\r\n                      ...provided.draggableProps.style,\r\n                    }}\r\n                  >\r\n                    <div className=\"card-body\">\r\n                      <h5 className=\"card-title\">{task.title}</h5>\r\n                      <p className=\"card-text\">{task.description}</p>\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <button\r\n                          onClick={() => onUpdate(task.id, { ...task, completed: !task.completed })}\r\n                          className=\"btn btn-outline-primary btn-sm\"\r\n                        >\r\n                          {task.completed ? 'Marcar Incompleta' : 'Marcar Completa'}\r\n                        </button>\r\n                        <button onClick={() => onDelete(task.id)} className=\"btn btn-outline-danger btn-sm\">\r\n                          Eliminar\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                )}\r\n              </Draggable>\r\n            ))}\r\n            {provided.placeholder}\r\n          </ul>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}