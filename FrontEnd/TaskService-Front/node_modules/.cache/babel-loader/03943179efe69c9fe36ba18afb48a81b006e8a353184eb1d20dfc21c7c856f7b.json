{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PIPEPC\\\\task-service-front\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setTasks, setLoading, setError } from '../features/taskSlice';\nimport taskService from '../services/taskService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const tasks = useSelector(state => state.tasks.tasks);\n  const loading = useSelector(state => state.tasks.loading);\n  const error = useSelector(state => state.tasks.error);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const fetchTasks = async () => {\n      dispatch(setLoading(true));\n      try {\n        const tasks = await taskService.getTasks();\n        dispatch(setTasks(tasks));\n      } catch (error) {\n        dispatch(setError(error.message));\n      } finally {\n        dispatch(setLoading(false));\n      }\n    };\n    fetchTasks();\n  }, [dispatch]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: task.title\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"EempmZz53hUzeRGrLEsGAhabZxc=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","setTasks","setLoading","setError","taskService","jsxDEV","_jsxDEV","TaskList","_s","tasks","state","loading","error","dispatch","fetchTasks","getTasks","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","title","id","_c","$RefreshReg$"],"sources":["C:/Users/PIPEPC/task-service-front/src/components/TaskList.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setTasks, setLoading, setError } from '../features/taskSlice';\r\nimport taskService from '../services/taskService';\r\n\r\nconst TaskList = () => {\r\n  const tasks = useSelector(state => state.tasks.tasks);\r\n  const loading = useSelector(state => state.tasks.loading);\r\n  const error = useSelector(state => state.tasks.error);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      dispatch(setLoading(true));\r\n      try {\r\n        const tasks = await taskService.getTasks();\r\n        dispatch(setTasks(tasks));\r\n      } catch (error) {\r\n        dispatch(setError(error.message));\r\n      } finally {\r\n        dispatch(setLoading(false));\r\n      }\r\n    };\r\n\r\n    fetchTasks();\r\n  }, [dispatch]);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error: {error}</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Task List</h1>\r\n      <ul>\r\n        {tasks.map(task => (\r\n          <li key={task.id}>{task.title}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,QAAQ,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,uBAAuB;AACtE,OAAOC,WAAW,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,KAAK,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACD,KAAK,CAACA,KAAK,CAAC;EACrD,MAAME,OAAO,GAAGZ,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC;EACzD,MAAMC,KAAK,GAAGb,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACD,KAAK,CAACG,KAAK,CAAC;EACrD,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMgB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7BD,QAAQ,CAACX,UAAU,CAAC,IAAI,CAAC,CAAC;MAC1B,IAAI;QACF,MAAMO,KAAK,GAAG,MAAML,WAAW,CAACW,QAAQ,CAAC,CAAC;QAC1CF,QAAQ,CAACZ,QAAQ,CAACQ,KAAK,CAAC,CAAC;MAC3B,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,QAAQ,CAACV,QAAQ,CAACS,KAAK,CAACI,OAAO,CAAC,CAAC;MACnC,CAAC,SAAS;QACRH,QAAQ,CAACX,UAAU,CAAC,KAAK,CAAC,CAAC;MAC7B;IACF,CAAC;IAEDY,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,IAAIF,OAAO,EAAE,oBAAOL,OAAA;IAAAW,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACrC,IAAIT,KAAK,EAAE,oBAAON,OAAA;IAAAW,QAAA,GAAG,SAAO,EAACL,KAAK;EAAA;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAEvC,oBACEf,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBf,OAAA;MAAAW,QAAA,EACGR,KAAK,CAACa,GAAG,CAACC,IAAI,iBACbjB,OAAA;QAAAW,QAAA,EAAmBM,IAAI,CAACC;MAAK,GAApBD,IAAI,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CACnC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACb,EAAA,CAnCID,QAAQ;EAAA,QACER,WAAW,EACTA,WAAW,EACbA,WAAW,EACRC,WAAW;AAAA;AAAA0B,EAAA,GAJxBnB,QAAQ;AAqCd,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}