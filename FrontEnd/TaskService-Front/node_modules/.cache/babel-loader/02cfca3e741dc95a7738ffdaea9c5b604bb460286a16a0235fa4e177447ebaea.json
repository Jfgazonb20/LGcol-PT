{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PIPEPC\\\\task-service-front\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TaskForm from './components/TaskForm';\nimport TaskList from './components/TaskList';\nimport './App.css';\nimport { useTheme } from './ThemeContext'; // Importa el contexto de tema\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const {\n    theme,\n    toggleTheme\n  } = useTheme(); // Accede al tema y la funci贸n para cambiarlo\n\n  // Obtener todas las tareas\n  const fetchTasks = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:8081/tasks');\n      if (!response.ok) {\n        throw new Error('Error al obtener las tareas');\n      }\n      const data = await response.json();\n      setTasks(data);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Crear una nueva tarea\n  const createTask = async task => {\n    try {\n      const response = await fetch('http://localhost:8081/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(task)\n      });\n      if (!response.ok) {\n        throw new Error('Error al crear la tarea');\n      }\n      const newTask = await response.json();\n      setTasks([...tasks, newTask]);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  // Actualizar una tarea existente\n  const updateTask = async (id, updatedTask) => {\n    try {\n      const response = await fetch(`http://localhost:8081/tasks/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedTask)\n      });\n      if (!response.ok) {\n        throw new Error('Error al actualizar la tarea');\n      }\n      const updatedTaskData = await response.json();\n      setTasks(tasks.map(task => task.id === id ? updatedTaskData : task));\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  // Eliminar una tarea\n  const deleteTask = async id => {\n    try {\n      const response = await fetch(`http://localhost:8081/tasks/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error('Error al eliminar la tarea');\n      }\n      setTasks(tasks.filter(task => task.id !== id));\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  // Cargar las tareas al iniciar la aplicaci贸n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${theme === 'dark' ? 'bg-dark text-white' : 'bg-light text-dark'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de Tareas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleTheme,\n        className: \"btn btn-secondary\",\n        children: [\"Cambiar a \", theme === 'dark' ? 'Claro' : 'Oscuro']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n        onCreate: createTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: tasks,\n        onUpdate: updateTask,\n        onDelete: deleteTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hfqkkGD44223J51Tho9skmXMq/8=\", false, function () {\n  return [useTheme];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TaskForm","TaskList","useTheme","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","tasks","setTasks","loading","setLoading","error","setError","theme","toggleTheme","fetchTasks","response","fetch","ok","Error","data","json","message","createTask","task","method","headers","body","JSON","stringify","newTask","updateTask","id","updatedTask","updatedTaskData","map","deleteTask","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onClick","onCreate","onUpdate","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/PIPEPC/task-service-front/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TaskForm from './components/TaskForm';\nimport TaskList from './components/TaskList';\nimport './App.css';\nimport { useTheme } from './ThemeContext'; // Importa el contexto de tema\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { theme, toggleTheme } = useTheme(); // Accede al tema y la funci贸n para cambiarlo\n\n  // Obtener todas las tareas\n  const fetchTasks = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:8081/tasks');\n      if (!response.ok) {\n        throw new Error('Error al obtener las tareas');\n      }\n      const data = await response.json();\n      setTasks(data);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Crear una nueva tarea\n  const createTask = async (task) => {\n    try {\n      const response = await fetch('http://localhost:8081/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(task),\n      });\n      if (!response.ok) {\n        throw new Error('Error al crear la tarea');\n      }\n      const newTask = await response.json();\n      setTasks([...tasks, newTask]);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  // Actualizar una tarea existente\n  const updateTask = async (id, updatedTask) => {\n    try {\n      const response = await fetch(`http://localhost:8081/tasks/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updatedTask),\n      });\n      if (!response.ok) {\n        throw new Error('Error al actualizar la tarea');\n      }\n      const updatedTaskData = await response.json();\n      setTasks(tasks.map(task => (task.id === id ? updatedTaskData : task)));\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  // Eliminar una tarea\n  const deleteTask = async (id) => {\n    try {\n      const response = await fetch(`http://localhost:8081/tasks/${id}`, {\n        method: 'DELETE',\n      });\n      if (!response.ok) {\n        throw new Error('Error al eliminar la tarea');\n      }\n      setTasks(tasks.filter(task => task.id !== id));\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  // Cargar las tareas al iniciar la aplicaci贸n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  return (\n    <div className={`App ${theme === 'dark' ? 'bg-dark text-white' : 'bg-light text-dark'}`}>\n      <h1>Lista de Tareas</h1>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      {loading ? (\n        <p>Cargando...</p>\n      ) : (\n        <>\n          <button onClick={toggleTheme} className=\"btn btn-secondary\">\n            Cambiar a {theme === 'dark' ? 'Claro' : 'Oscuro'}\n          </button>\n          <TaskForm onCreate={createTask} />\n          <TaskList tasks={tasks} onUpdate={updateTask} onDelete={deleteTask} />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}