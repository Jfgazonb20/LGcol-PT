{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport taskService from '../services/taskService';\nconst initialState = {\n  tasks: [],\n  loading: false,\n  error: null\n};\nconst taskSlice = createSlice({\n  name: 'tasks',\n  initialState,\n  reducers: {\n    setTasks: (state, action) => {\n      state.tasks = action.payload;\n    },\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n    },\n    addTask: (state, action) => {\n      state.tasks.push(action.payload);\n    },\n    updateTask: (state, action) => {\n      const index = state.tasks.findIndex(task => task.id === action.payload.id);\n      if (index !== -1) {\n        state.tasks[index] = action.payload;\n      }\n    },\n    removeTask: (state, action) => {\n      state.tasks = state.tasks.filter(task => task.id !== action.payload);\n    }\n  }\n});\nexport const {\n  setTasks,\n  setLoading,\n  setError,\n  addTask,\n  updateTask,\n  removeTask\n} = taskSlice.actions;\nexport const fetchTasks = () => async dispatch => {\n  dispatch(setLoading(true));\n  try {\n    const tasks = await taskService.getTasks();\n    dispatch(setTasks(tasks));\n  } catch (error) {\n    dispatch(setError(error.message));\n  } finally {\n    dispatch(setLoading(false));\n  }\n};\nexport const createTask = task => async dispatch => {\n  try {\n    const newTask = await taskService.createTask(task);\n    dispatch(addTask(newTask));\n  } catch (error) {\n    dispatch(setError(error.message));\n  }\n};\nexport const editTask = (id, updatedTask) => async dispatch => {\n  try {\n    const updatedTaskData = await taskService.updateTask(id, updatedTask);\n    dispatch(updateTask(updatedTaskData));\n  } catch (error) {\n    dispatch(setError(error.message));\n  }\n};\nexport const deleteTask = id => async dispatch => {\n  try {\n    await taskService.deleteTask(id);\n    dispatch(removeTask(id));\n  } catch (error) {\n    dispatch(setError(error.message));\n  }\n};\nexport default taskSlice.reducer;","map":{"version":3,"names":["createSlice","taskService","initialState","tasks","loading","error","taskSlice","name","reducers","setTasks","state","action","payload","setLoading","setError","addTask","push","updateTask","index","findIndex","task","id","removeTask","filter","actions","fetchTasks","dispatch","getTasks","message","createTask","newTask","editTask","updatedTask","updatedTaskData","deleteTask","reducer"],"sources":["C:/Users/PIPEPC/task-service-front/src/features/taskSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport taskService from '../services/taskService';\r\n\r\nconst initialState = {\r\n  tasks: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst taskSlice = createSlice({\r\n  name: 'tasks',\r\n  initialState,\r\n  reducers: {\r\n    setTasks: (state, action) => {\r\n      state.tasks = action.payload;\r\n    },\r\n    setLoading: (state, action) => {\r\n      state.loading = action.payload;\r\n    },\r\n    setError: (state, action) => {\r\n      state.error = action.payload;\r\n    },\r\n    addTask: (state, action) => {\r\n      state.tasks.push(action.payload);\r\n    },\r\n    updateTask: (state, action) => {\r\n      const index = state.tasks.findIndex(task => task.id === action.payload.id);\r\n      if (index !== -1) {\r\n        state.tasks[index] = action.payload;\r\n      }\r\n    },\r\n    removeTask: (state, action) => {\r\n      state.tasks = state.tasks.filter(task => task.id !== action.payload);\r\n    }\r\n  },\r\n});\r\n\r\nexport const { setTasks, setLoading, setError, addTask, updateTask, removeTask } = taskSlice.actions;\r\n\r\nexport const fetchTasks = () => async (dispatch) => {\r\n  dispatch(setLoading(true));\r\n  try {\r\n    const tasks = await taskService.getTasks();\r\n    dispatch(setTasks(tasks));\r\n  } catch (error) {\r\n    dispatch(setError(error.message));\r\n  } finally {\r\n    dispatch(setLoading(false));\r\n  }\r\n};\r\n\r\nexport const createTask = (task) => async (dispatch) => {\r\n  try {\r\n    const newTask = await taskService.createTask(task);\r\n    dispatch(addTask(newTask));\r\n  } catch (error) {\r\n    dispatch(setError(error.message));\r\n  }\r\n};\r\n\r\nexport const editTask = (id, updatedTask) => async (dispatch) => {\r\n  try {\r\n    const updatedTaskData = await taskService.updateTask(id, updatedTask);\r\n    dispatch(updateTask(updatedTaskData));\r\n  } catch (error) {\r\n    dispatch(setError(error.message));\r\n  }\r\n};\r\n\r\nexport const deleteTask = (id) => async (dispatch) => {\r\n  try {\r\n    await taskService.deleteTask(id);\r\n    dispatch(removeTask(id));\r\n  } catch (error) {\r\n    dispatch(setError(error.message));\r\n  }\r\n};\r\n\r\nexport default taskSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}