{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst taskSlice = createSlice({\n  name: 'tasks',\n  initialState: {\n    tasks: [],\n    loading: false,\n    error: null\n  },\n  reducers: {\n    setTasks: (state, action) => {\n      state.tasks = action.payload;\n    },\n    addTask: (state, action) => {\n      state.tasks.push(action.payload);\n    },\n    updateTask: (state, action) => {\n      const index = state.tasks.findIndex(task => task.id === action.payload.id);\n      if (index !== -1) {\n        state.tasks[index] = action.payload;\n      }\n    },\n    deleteTask: (state, action) => {\n      state.tasks = state.tasks.filter(task => task.id !== action.payload);\n    },\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  setTasks,\n  addTask,\n  updateTask,\n  deleteTask,\n  setLoading,\n  setError\n} = taskSlice.actions;\nexport default taskSlice.reducer;","map":{"version":3,"names":["createSlice","taskSlice","name","initialState","tasks","loading","error","reducers","setTasks","state","action","payload","addTask","push","updateTask","index","findIndex","task","id","deleteTask","filter","setLoading","setError","actions","reducer"],"sources":["C:/Users/PIPEPC/task-service-front/src/features/taskSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst taskSlice = createSlice({\r\n  name: 'tasks',\r\n  initialState: {\r\n    tasks: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    setTasks: (state, action) => {\r\n      state.tasks = action.payload;\r\n    },\r\n    addTask: (state, action) => {\r\n      state.tasks.push(action.payload);\r\n    },\r\n    updateTask: (state, action) => {\r\n      const index = state.tasks.findIndex(task => task.id === action.payload.id);\r\n      if (index !== -1) {\r\n        state.tasks[index] = action.payload;\r\n      }\r\n    },\r\n    deleteTask: (state, action) => {\r\n      state.tasks = state.tasks.filter(task => task.id !== action.payload);\r\n    },\r\n    setLoading: (state, action) => {\r\n      state.loading = action.payload;\r\n    },\r\n    setError: (state, action) => {\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setTasks, addTask, updateTask, deleteTask, setLoading, setError } = taskSlice.actions;\r\nexport default taskSlice.reducer;   "],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDC,OAAO,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACL,KAAK,CAACS,IAAI,CAACH,MAAM,CAACC,OAAO,CAAC;IAClC,CAAC;IACDG,UAAU,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAMK,KAAK,GAAGN,KAAK,CAACL,KAAK,CAACY,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKR,MAAM,CAACC,OAAO,CAACO,EAAE,CAAC;MAC1E,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBN,KAAK,CAACL,KAAK,CAACW,KAAK,CAAC,GAAGL,MAAM,CAACC,OAAO;MACrC;IACF,CAAC;IACDQ,UAAU,EAAEA,CAACV,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACgB,MAAM,CAACH,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKR,MAAM,CAACC,OAAO,CAAC;IACtE,CAAC;IACDU,UAAU,EAAEA,CAACZ,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACJ,OAAO,GAAGK,MAAM,CAACC,OAAO;IAChC,CAAC;IACDW,QAAQ,EAAEA,CAACb,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACH,KAAK,GAAGI,MAAM,CAACC,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,QAAQ;EAAEI,OAAO;EAAEE,UAAU;EAAEK,UAAU;EAAEE,UAAU;EAAEC;AAAS,CAAC,GAAGrB,SAAS,CAACsB,OAAO;AACpG,eAAetB,SAAS,CAACuB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}