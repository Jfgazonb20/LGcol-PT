{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PIPEPC\\\\task-service-front\\\\src\\\\components\\\\TaskItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteTask, editTask } from '../features/taskSlice';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TaskItem({\n  task\n}) {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [updatedTitle, setUpdatedTitle] = useState(task.title);\n  const [updatedDescription, setUpdatedDescription] = useState(task.description);\n  const dispatch = useDispatch();\n  const handleDelete = () => {\n    dispatch(deleteTask(task.id));\n  };\n  const handleEdit = () => {\n    const updatedTask = {\n      ...task,\n      title: updatedTitle,\n      description: updatedDescription\n    };\n    dispatch(editTask(task.id, updatedTask));\n    setIsEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: updatedTitle,\n        onChange: e => setUpdatedTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: updatedDescription,\n        onChange: e => setUpdatedDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEdit,\n        children: \"Guardar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: task.completed,\n        onChange: () => dispatch(editTask(task.id, {\n          ...task,\n          completed: !task.completed\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsEditing(true),\n        children: \"Editar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDelete,\n        children: \"Eliminar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskItem, \"SDX67s7teJiSa9hqSWxVZQCKJU0=\", false, function () {\n  return [useDispatch];\n});\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","useState","useDispatch","deleteTask","editTask","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskItem","task","_s","isEditing","setIsEditing","updatedTitle","setUpdatedTitle","title","updatedDescription","setUpdatedDescription","description","dispatch","handleDelete","id","handleEdit","updatedTask","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","checked","completed","_c","$RefreshReg$"],"sources":["C:/Users/PIPEPC/task-service-front/src/components/TaskItem.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteTask, editTask } from '../features/taskSlice';\r\n\r\nfunction TaskItem({ task }) {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [updatedTitle, setUpdatedTitle] = useState(task.title);\r\n  const [updatedDescription, setUpdatedDescription] = useState(task.description);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDelete = () => {\r\n    dispatch(deleteTask(task.id));\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    const updatedTask = { ...task, title: updatedTitle, description: updatedDescription };\r\n    dispatch(editTask(task.id, updatedTask));\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      {isEditing ? (\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            value={updatedTitle}\r\n            onChange={(e) => setUpdatedTitle(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={updatedDescription}\r\n            onChange={(e) => setUpdatedDescription(e.target.value)}\r\n          />\r\n          <button onClick={handleEdit}>Guardar</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h3>{task.title}</h3>\r\n          <p>{task.description}</p>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={task.completed}\r\n            onChange={() => dispatch(editTask(task.id, { ...task, completed: !task.completed }))}\r\n          />\r\n          <button onClick={() => setIsEditing(true)}>Editar</button>\r\n          <button onClick={handleDelete}>Eliminar</button>\r\n        </>\r\n      )}\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default TaskItem;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}